TCSS 342 - Data Structures

Assignment 6 Part 2

Modify this file to add answers to the questions below.


Most questions below refer to the Graph.pdf file included with the starter code for this assignment.
Graph.pdf shows the same graph used in part 1 of this assignment.
That graph is referred to as G in this document.

For questions 1 to 6 below answer TRUE or FALSE.

Q1.  Graph G is a digraph.  	False

Q2.  Graph G is acyclic. 	False	(does not qualify to be a tree, too many edges)

Q3.  Graph G is a weighted graph.	True

Q4.  Graph G is a complete graph.	False	(not a edge from every vertex to every other vertex)

Q5.  In graph G, vertex 1 (Aberdeen) is reachable from vertex 4 (Kennewick).	True (reachable yes but they don't share an edge)

Q6.  Graph G is a connected graph.	True	


For questions 7 to 10 below provide short answers.

Q7.  What is the cardinality of the vertex set (|V|) in graph G?	10

Q8.  List the vertices that are adjacent to vertex 9 (Tacoma) in graph G.	5, 7, 10

Q9.  What is the in-degree of vertex 8 (Spokane) in graph G?	6  (has 3 coming in but since this is undirected, each edge counts as 2 b/c of making a self loop)

Q10. What is the cost of the simple path {7, 6, 1} in graph G?	174 (79 + 95)


Questions 11 - 14 refer to DFS and BFS

Q11. Show the order in which vertices would be visited by a depth first search (DFS) starting at node 7 (Seattle).
You may show either the node numbers or the city names.		7, 2, 6, 1, 5, 9, 10, 4, 8, 3

Q12. Which previously studied data structure is used in the implementation of DFS? 	A Stack

Q13. Show the order in which vertices would be visited by a breadth first search (BFS) starting at node 7 (Seattle).
You may show either the node numbers or the city names.		7, 2, 6, 8, 9, 1, 3, 10, 5, 4

Q14. Which previously studied data structure is used in the implementation of BFS?	A queue


Question 15 and 16 below refer to the starter code provide with this assignment.

Q15. In your own words, briefly describe the purpose of the minimalPath() method in class WeightedAdjMatrixGraph.
The purpose of this method is to determine the shortest possible path from a specified source node to a specified terminal node.  
The total value of all the edges contained in the shortest path is returned as a double.  

Q16. In your own words, briefly describe the purpose of the floydShortestPaths() method in class WeightedAdjMatrixGraph.
The purpose of this method is to determine the shortest path between any two vertices in the graph, for all vertices.
The results are returned as an adjacency matrix of the minimal cost to traverse from one path to another, if possible.

For questions 17 through 20, match the name of the algorithm to the problem in graph theory it is designed to solve (from the A to F list below).
You may need to do a bit of research on the Internet to answer these questions. NOTE: below the list of questions is a list of various problems.

Q17. Dijkstra's algorithm.	B	

Q18. Prim's algorithm.		A

Q19. Kruskal's algorithm	A

Q20. The Floyd-Warshall algorithm	E


Problems in graph theory:
A) Minimum spanning tree
B) Single-source shortest paths (graph without negative edge weights)
C) Single-source shortest paths (graph may include negative edge weights) (Bellman-Ford)
D) Maximum flow in a flow network	(Edmonds-Karp, MPM)
E) All pairs shortest paths
F) Topological sort	(Kahn's)